[package]
name = "open-coroutine-core"
version = "0.5.0"
edition = "2021"
authors = ["zhangzicheng@apache.org"]
description = "The open-coroutine is a simple, efficient and generic coroutine library."
repository = "https://github.com/acl-dev/open-coroutine"
keywords = ["runtime", "coroutine", "hook", "preempt", "work-steal"]
categories = ["data-structures", "concurrency", "asynchronous", "web-programming", "wasm"]
license = "LGPL-3.0 OR Apache-2.0"
readme = "../README.md"

[dependencies]
dashmap = "5.5.1"
cfg-if = "1.0.0"
uuid = { version = "1.3.0", features = [
    "v4",
    "fast-rng",
    "macro-diagnostics",
] }
crossbeam-deque = "0.8.3"
core_affinity = "0.8.0"
open-coroutine-timer = { version = "0.5.0", path = "../open-coroutine-timer" }
open-coroutine-queue = { version = "0.5.0", path = "../open-coroutine-queue" }
corosensei = { version = "0.1.4", optional = true }
context = { version = "3.0.0", optional = true }
nix = { version = "0.27.1", optional = true }

[target.'cfg(unix)'.dependencies]
libc = "0.2.140"

[target."cfg(windows)".dependencies]
windows-sys = { version = "0.48.0", features = [
    "Win32_System_SystemInformation",
    "Win32_System_Diagnostics_Debug"
] }

[build-dependencies]
cfg-if = "1.0.0"

[dev-dependencies]
backtrace = "0.3.67"

[features]
default = ["korosensei", "preemptive-schedule"]

# Supported low-level coroutines.
boost = ["context"]
korosensei = ["corosensei"]

# Provide preemptive scheduling implementation.
# Enable for default.
preemptive-schedule = ["nix/signal", "nix/pthread"]
